"""
Django settings for automax project.

Generated by 'django-admin startproject' using Django 5.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os
import environ

from django.contrib.messages import constants as messages

# init environ 
env = environ.Env()
env.read_env()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env("DJANGO_SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = [".vercel.app", ".now.sh", "127.0.0.1", "localhost"]


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "localflavor",
    "crispy_forms",
    "crispy_bootstrap4",
    "django_filters",
    "storages",
    "main",
    "users",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "automax.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "automax.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases


'''DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}'''

# uncomment to use postgres database
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': env('DB_POSTGRES_DATABASE'),
        'USER': env('DB_POSTGRES_USER'),
        'PASSWORD': env('DB_POSTGRES_PASSWORD'),
        'HOST': env('DB_POSTGRES_HOST'),
        'PORT': env('DB_POSTGRES_PORT'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True

# Login Setting 
LOGIN_REDIRECT_URL = "/home/"
LOGIN_URL = "/login/"

# Messages Settings
MESSAGE_TAGS = {
    messages.ERROR: "danger",
}

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = "static/"
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

# media path (uploaded files)

MEDIA_ROOT = os.path.join(BASE_DIR, "media/")   
MEDIA_URL = "media/"

# Django crispy forms settings
CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap4"
CRISPY_TEMPLATE_PACK = "bootstrap4"

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Setting for s3 bucket to store media and static files
STORAGES = {
    "default": {
        "BACKEND": "storages.backends.s3.S3Storage",
        "OPTIONS": {
            'access_key' : env('AWS_S3_ACCESS_KEY'),
            'secret_key' : env('AWS_S3_SECRET_KEY'),
            'bucket_name' : env('AWS_S3_BUCKET_NAME'),
            'endpoint_url': env('AWS_S3_ENDPOINT_URL'),
            'region_name': env('AWS_S3_REGION_NAME'),
            'custom_domain': env('AWS_S3_CUSTOM_DOMAIN'),
            'location': 'media',
            'default_acl': 'public-read',
        },
    },
    "staticfiles": {
        "BACKEND": "storages.backends.s3.S3Storage",
        "OPTIONS": {
            'access_key' : env('AWS_S3_ACCESS_KEY'),
            'secret_key' : env('AWS_S3_SECRET_KEY'),
            'bucket_name' : env('AWS_S3_BUCKET_NAME'),
            'endpoint_url': env('AWS_S3_ENDPOINT_URL'),
            'region_name': env('AWS_S3_REGION_NAME'),
            'custom_domain': env('AWS_S3_CUSTOM_DOMAIN'),
            'location': 'static',
            'default_acl': 'public-read',
        },
    },
}
